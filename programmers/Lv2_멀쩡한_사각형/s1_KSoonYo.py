# 교점 수 = 반복되는 횟수 = (최대공약수)
# 교점이 없을 때 대각선이 뚫는 사각형 개수 = (가로' + 세로' - 1)
# 가로' 세로'는 닮음 사각형의 최소 가로, 세로 길이
# 가로', 세로' 길이에 최대 공약수를 곱해주면 전체 사각형의 가로, 세로 길이가 나온다.
# (가로'+ 세로'- 1) * (최대공약수) = (가로 + 세로 - 최대공약수)
# 답: 전체 사각형 개수 - (가로 + 세로 - 최대공약수)

# 대각선이 교점을 지날 때는 전체 사각형의 닮음 사각형의 끝점을 지날 때
# 전체 사각형 내에서 가장 작은 닮음 사각형이 반복하여 생성되는 횟수 => 전체 사각형의 가로, 세로 최대 공약수만큼 반복하여 생성

# 가장 작은 닮음 사각형의 가로, 세로 비율은 전체 사각형의 가로, 세로 길이를 최대 공약수로 나누면 구할 수 있다.

def solution(w,h):
    gcd = 0

    num1, num2 = w, h
    while num2 != 0:
        num1, num2 = num2, num1 % num2
    
    gcd = num1

    trash_square = (w + h - gcd)
    answer = w * h - trash_square
    return answer
