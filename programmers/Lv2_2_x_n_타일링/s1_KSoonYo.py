def solution(n):
    answer = 1
    dp = [0] * (n + 1)
    dp[1] = 1
    for i in range(2, n + 1):
        if i == 2:
            dp[i] = 2
        else:
            # dp[i]: i - 1번째 타일에 2 x 1(가로 1) 타일을 세로로 붙인 경우 + i - 2 번째 타일에 2 x 1 타일을 가로로 붙인 경우
            # 타일을 붙일 수 있는 유형은 2 x 2 일 때 모두 도출된다. (2 x 1을 세로로 붙이는 경우, 2 x 1을 가로로 붙이는 경우)
            dp[i] = dp[i - 2] + dp[i - 1]

            # point: 값이 커지면 모듈러 연산도 시간이 오래걸림 -> dp[i] 값을 구한 뒤 한 번에 1000000007 을 나누면 시간 초과
            # 따라서 dp[i]가 1000000007 이상이 되는 순간 작은 수(나머지)로 바로 치환해야 함
            dp[i] %= 1000000007 
    return dp[i]
   