import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    orders = input().split()
    u = [['w' for _ in range(3)] for _ in range(3)]
    d = [['y' for _ in range(3)] for _ in range(3)]
    f = [['r' for _ in range(3)] for _ in range(3)]
    b = [['o' for _ in range(3)] for _ in range(3)]
    l = [['g' for _ in range(3)] for _ in range(3)]
    r = [['b' for _ in range(3)] for _ in range(3)]
    for order in orders:
        side, turn = order[0], order[1]
        if side == 'U':
            if turn == '+':
                u[0][0], u[0][1], u[0][2], u[1][2], u[2][2], u[2][1], u[2][0], u[1][0] = u[2][0], u[1][0], u[0][0], u[0][1], u[0][2], u[1][2], u[2][2], u[2][1]
                f[0][0], f[0][1], f[0][2], r[0][0], r[0][1], r[0][2], b[0][0], b[0][1], b[0][2], l[0][0], l[0][1], l[0][2] = r[0][0], r[0][1], r[0][2], b[0][0], b[0][1], b[0][2], l[0][0], l[0][1], l[0][2], f[0][0], f[0][1], f[0][2]
            else:
                u[0][0], u[0][1], u[0][2], u[1][2], u[2][2], u[2][1], u[2][0], u[1][0] = u[0][2], u[1][2], u[2][2], u[2][1], u[2][0], u[1][0], u[0][0], u[0][1]
                f[0][0], f[0][1], f[0][2], r[0][0], r[0][1], r[0][2], b[0][0], b[0][1], b[0][2], l[0][0], l[0][1], l[0][2] = l[0][0], l[0][1], l[0][2], f[0][0], f[0][1], f[0][2], r[0][0], r[0][1], r[0][2], b[0][0], b[0][1], b[0][2]
        if side == 'D':
            if turn == '+':
                d[0][0], d[0][1], d[0][2], d[1][2], d[2][2], d[2][1], d[2][0], d[1][0] = d[2][0], d[1][0], d[0][0], d[0][1], d[0][2], d[1][2], d[2][2], d[2][1]
                f[2][0], f[2][1], f[2][2], r[2][0], r[2][1], r[2][2], b[2][0], b[2][1], b[2][2], l[2][0], l[2][1], l[2][2] = l[2][0], l[2][1], l[2][2], f[2][0], f[2][1], f[2][2], r[2][0], r[2][1], r[2][2], b[2][0], b[2][1], b[2][2]
            else:
                d[0][0], d[0][1], d[0][2], d[1][2], d[2][2], d[2][1], d[2][0], d[1][0] = d[0][2], d[1][2], d[2][2], d[2][1], d[2][0], d[1][0], d[0][0], d[0][1]
                f[2][0], f[2][1], f[2][2], r[2][0], r[2][1], r[2][2], b[2][0], b[2][1], b[2][2], l[2][0], l[2][1], l[2][2] = r[2][0], r[2][1], r[2][2], b[2][0], b[2][1], b[2][2], l[2][0], l[2][1], l[2][2], f[2][0], f[2][1], f[2][2]
        if side == 'F':
            if turn == '+':
                f[0][0], f[0][1], f[0][2], f[1][2], f[2][2], f[2][1], f[2][0], f[1][0] = f[2][0], f[1][0], f[0][0], f[0][1], f[0][2], f[1][2], f[2][2], f[2][1]
                r[0][0], r[1][0], r[2][0], u[2][0], u[2][1], u[2][2], l[2][2], l[1][2], l[0][2], d[2][0], d[2][1], d[2][2] = u[2][0], u[2][1], u[2][2], l[2][2], l[1][2], l[0][2], d[2][0], d[2][1], d[2][2], r[0][0], r[1][0], r[2][0]
            else:
                f[0][0], f[0][1], f[0][2], f[1][2], f[2][2], f[2][1], f[2][0], f[1][0] = f[0][2], f[1][2], f[2][2], f[2][1], f[2][0], f[1][0], f[0][0], f[0][1]
                r[0][0], r[1][0], r[2][0], u[2][0], u[2][1], u[2][2], l[2][2], l[1][2], l[0][2], d[2][0], d[2][1], d[2][2] = d[2][0], d[2][1], d[2][2], r[0][0], r[1][0], r[2][0], u[2][0], u[2][1], u[2][2], l[2][2], l[1][2], l[0][2]
        if side == 'B':
            if turn == '+':
                b[0][0], b[0][1], b[0][2], b[1][2], b[2][2], b[2][1], b[2][0], b[1][0] = b[2][0], b[1][0], b[0][0], b[0][1], b[0][2], b[1][2], b[2][2], b[2][1]
                u[0][0], u[0][1], u[0][2], r[0][2], r[1][2], r[2][2], d[0][0], d[0][1], d[0][2], l[2][0], l[1][0], l[0][0] = r[0][2], r[1][2], r[2][2], d[0][0], d[0][1], d[0][2], l[2][0], l[1][0], l[0][0], u[0][0], u[0][1], u[0][2]
            else:
                b[0][0], b[0][1], b[0][2], b[1][2], b[2][2], b[2][1], b[2][0], b[1][0] = b[0][2], b[1][2], b[2][2], b[2][1], b[2][0], b[1][0], b[0][0], b[0][1]
                r[0][2], r[1][2], r[2][2], d[0][0], d[0][1], d[0][2], l[2][0], l[1][0], l[0][0], u[0][0], u[0][1], u[0][2] = u[0][0], u[0][1], u[0][2], r[0][2], r[1][2], r[2][2], d[0][0], d[0][1], d[0][2], l[2][0], l[1][0], l[0][0]
        if side == 'L':
            if turn == '+':
                l[0][0], l[0][1], l[0][2], l[1][2], l[2][2], l[2][1], l[2][0], l[1][0] = l[2][0], l[1][0], l[0][0], l[0][1], l[0][2], l[1][2], l[2][2], l[2][1]
                f[0][0], f[1][0], f[2][0], d[2][2], d[1][2], d[0][2], b[2][2], b[1][2], b[0][2], u[0][0], u[1][0], u[2][0] = u[0][0], u[1][0], u[2][0], f[0][0], f[1][0], f[2][0], d[2][2], d[1][2], d[0][2], b[2][2], b[1][2], b[0][2]
            else:
                l[0][0], l[0][1], l[0][2], l[1][2], l[2][2], l[2][1], l[2][0], l[1][0] = l[0][2], l[1][2], l[2][2], l[2][1], l[2][0], l[1][0], l[0][0], l[0][1]
                u[0][0], u[1][0], u[2][0], f[0][0], f[1][0], f[2][0], d[2][2], d[1][2], d[0][2], b[2][2], b[1][2], b[0][2] = f[0][0], f[1][0], f[2][0], d[2][2], d[1][2], d[0][2], b[2][2], b[1][2], b[0][2], u[0][0], u[1][0], u[2][0]
        if side == 'R':
            if turn == '+':
                r[0][0], r[0][1], r[0][2], r[1][2], r[2][2], r[2][1], r[2][0], r[1][0] = r[2][0], r[1][0], r[0][0], r[0][1], r[0][2], r[1][2], r[2][2], r[2][1]
                u[0][2], u[1][2], u[2][2], f[0][2], f[1][2], f[2][2], d[2][0], d[1][0], d[0][0], b[2][0], b[1][0], b[0][0] = f[0][2], f[1][2], f[2][2], d[2][0], d[1][0], d[0][0], b[2][0], b[1][0], b[0][0], u[0][2], u[1][2], u[2][2]
            else:
                r[0][0], r[0][1], r[0][2], r[1][2], r[2][2], r[2][1], r[2][0], r[1][0] = r[0][2], r[1][2], r[2][2], r[2][1], r[2][0], r[1][0], r[0][0], r[0][1]
                f[0][2], f[1][2], f[2][2], u[0][2], u[1][2], u[2][2], b[2][0], b[1][0], b[0][0], d[2][0], d[1][0], d[0][0] = u[0][2], u[1][2], u[2][2], b[2][0], b[1][0], b[0][0], d[2][0], d[1][0], d[0][0], f[0][2], f[1][2], f[2][2]

    for i in u:
        print(''.join(i))